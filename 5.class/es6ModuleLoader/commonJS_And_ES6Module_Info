bu commonjs ornegi sanirim
module.exports = {
  getName: () => {
    return 'Jim';
  },

  getLocation: () => {
    return 'Munich';
  },

  dob: '12.01.1982',
};


const { getName, dob } = require('./user');
console.log(
  `${getName()} was born on ${dob}.`
);

package.json file

{
  "name": "commonJSExample",
  "version": "1.0.0",
  "description": "",
  "main": "commonJSExporter.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC"
}

burada dikkat edilecek olursa
  "type": "module"
diye birsey yazmadik eger yazsaydik
(node:26150) ExperimentalWarning: The ESM module loader is experimental.
file:///Users/ulkir/WebstormProjects/javascriptbasics/5.class/commonJSExample/commonJSImporter.js:1
const { getName, dob } = require("./commonJSExporter");
                         ^

ReferenceError: require is not defined
    at file:///Users/ulkir/WebstormProjects/javascriptbasics/5.class/commonJSExample/commonJSImporter.js:1:26
    at ModuleJob.run (internal/modules/esm/module_job.js:137:37)
    at async Loader.import (internal/modules/esm/loader.js:179:24)

Process finished with exit code 1

seklinde bize bu sekilde hata verirdi, suanda maalesef ikisi bir arada kullanilamiyor (ogrendigim kadariyla)
ya
module.exports   ve    const { getName, dob } = require('./user'); kombinasyonu kullanilir

yada
package.json dosyasina
  "type": "module"
  eklenir ve bu sayede (node:26150) ExperimentalWarning: The ESM module loader is experimental.
  aktif hale getirilmis olur
export -import

es6 module activated
burada bize bu uyariyi verecek
(node:26150) ExperimentalWarning: The ESM module loader is experimental.



{
  "name": "es6ModuleLoader",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "module"
}

ve mutlaka .js uzantisi eklenmeli
import {dob, getName} from "./es6ModuleExporter.js";



eger es6 li haliyle html dosysinda kullanmak isityorsak
<script type="module" src="source/to/file.js"></script>
seklinde yapmamiz gerekli

eger commonjs kullaniliyorsa
<script type="module" src="app.js"></script>
# If it is not a module i.e. simple script
# you can use the nomodule tag
<script nomodule src="classic-app-bundle.js"></script>

seklinde yapilabilir
Daha fazla detay icin bu videolar guzel

ES6 Tutorial - #10 Modules (import & export)
How to Export and Require Modules in NodeJS
JavaScript ES6 Arrow Functions Tutorial

